version: '3.9'

services:
  server:
    container_name: server
    restart: on-failure
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
    build:
      context: ./server
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./server/:/project/
    env_file:
      - ./server/.docker-env
    depends_on:
      - db
      - notifications

  db:
    container_name: db
    image: postgres
    restart: on-failure
    ports:
      - 5432:5432
    env_file:
      - ./.postgres-env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  notifications:
    container_name: notifications
    restart: on-failure
    command: bash -c "python3 ./src/main.py"
    build:
      context: ./notifications
      dockerfile: ./Dockerfile
    volumes:
      - ./notifications/:/project/
    env_file:
      - ./notifications/.docker-env
    depends_on:
      - rabbitmq

  celery:
    container_name: celery
    build:
      context: ./notifications
    restart: on-failure
    command: bash -c " cd src && celery --app=tasks:app worker --loglevel=info"
    env_file:
      - ./notifications/.docker-env
    volumes:
      - ./notifications/:/project/

  flower:
    container_name: flower
    build:
      context: ./notifications
    restart: on-failure
    command: bash -c " cd src && celery --app=tasks:app flower"
    env_file:
      - ./notifications/.docker-env
    ports:
      - 5555:5555
    depends_on:
      - celery

  notifications_bot:
    container_name: notifications_bot
    restart: on-failure
    command: bash -c "python3 ./src/main.py"
    build:
      context: ./notifications_bot
      dockerfile: ./Dockerfile
    volumes:
      - ./notifications_bot/:/project/
    env_file:
      - ./notifications_bot/.docker-env
    depends_on:
      - db

  frontend:
    container_name: frontend
    restart: on-failure
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    command: bash -c "npm run dev"
    ports:
      - 5000:5000
    env_file:
      - ./frontend/video-hosting/.docker-env
    volumes:
      - ./frontend/video-hosting/:/project/
      - node_modules:/project/node_modules
    depends_on:
      - server

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 5050:80
    env_file:
      - ./.postgres-env
    depends_on:
      - db

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4-management
    restart: on-failure
    hostname: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    env_file:
      - ./.rabbit-env

volumes:
  postgres_data:
  node_modules:
