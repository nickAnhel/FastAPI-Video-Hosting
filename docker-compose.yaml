version: '3.9'

services:
  # S3 Storage
  s3_storage_app:
    container_name: s3_storage_service
    restart: always
    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload"
    # command: bash -c "gunicorn -k uvicorn.workers.UvicornWorker app.main:app --reload --bind 0.0.0.0:8000"
    build:
      context: ./s3_storage_service
      dockerfile: ./Dockerfile
    ports:
      - 8001:8001
    volumes:
      - ./s3_storage_service/:/project/
    env_file:
      - ./s3_storage_service/.docker-env

  # Videos
  video_app:
    container_name: videos_service
    restart: always
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload"
    # command: bash -c "alembic upgrade head && gunicorn -k uvicorn.workers.UvicornWorker app.main:app --reload --bind 0.0.0.0:8000"
    build:
      context: ./video_service
      dockerfile: ./Dockerfile
    ports:
      - 8002:8002
    volumes:
      - ./video_service/:/project/
    env_file:
      - ./video_service/.docker-env
    depends_on:
      - video_db
      - s3_storage_app

  video_db:
    container_name: videos_service_db
    image: postgres
    restart: always
    ports:
      - 5433:5432
    env_file:
      - ./.postgres-env
    volumes:
      - postgres_data_video:/var/lib/postgresql/data

  # Auth and Users
  auth_users_app:
    container_name: auth_users_service
    restart: always
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8003 --reload"
    # command: bash -c "alembic upgrade head && gunicorn -k uvicorn.workers.UvicornWorker app.main:app --reload --bind 0.0.0.0:8000"
    build:
      context: ./auth_users_service
      dockerfile: ./Dockerfile
    ports:
      - 8003:8003
    volumes:
      - ./auth_users_service/:/project/
    env_file:
      - ./auth_users_service/.docker-env
    depends_on:
      - auth_users_db

  auth_users_db:
    container_name: auth_users_service_db
    image: postgres
    restart: always
    ports:
      - 5434:5432
    env_file:
      - ./.postgres-env
    volumes:
      - postgres_data_users:/var/lib/postgresql/data

  # Comments
  comments_app:
    container_name: comments_service
    restart: always
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8004 --reload"
    # command: bash -c "alembic upgrade head && gunicorn -k uvicorn.workers.UvicornWorker app.main:app --reload --bind 0.0.0.0:8000"
    build:
      context: ./comments_service
      dockerfile: ./Dockerfile
    ports:
      - 8004:8004
    volumes:
      - ./comments_service/:/project/
    env_file:
      - ./comments_service/.docker-env
    depends_on:
      - comments_db
      - video_app

  comments_db:
    container_name: comments_service_db
    image: postgres
    restart: always
    ports:
      - 5435:5432
    env_file:
      - ./.postgres-env
    volumes:
      - postgres_data_comments:/var/lib/postgresql/data

  # Playlists
  playlists_app:
    container_name: playlists_service
    restart: always
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8005 --reload"
    # command: bash -c "alembic upgrade head && gunicorn -k uvicorn.workers.UvicornWorker app.main:app --reload --bind 0.0.0.0:8000"
    build:
      context: ./playlists_service
      dockerfile: ./Dockerfile
    ports:
      - 8005:8005
    volumes:
      - ./playlists_service/:/project/
    env_file:
      - ./playlists_service/.docker-env
    depends_on:
      - playlists_db

  playlists_db:
    container_name: playlists_service_db
    image: postgres
    restart: always
    ports:
      - 5436:5432
    env_file:
      - ./.postgres-env
    volumes:
      - postgres_data_playlists:/var/lib/postgresql/data

  # Tools
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    env_file:
      - ./.postgres-env
    depends_on:
      - video_db

  nginx:
    image: nginx:latest
    ports:
      - 8000:8000
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - video_app
      - auth_users_app

volumes:
  postgres_data_video:
  postgres_data_users:
  postgres_data_comments:
  postgres_data_playlists:
